{
  "name": "1_1_Telegram_Multi_Bot_1",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -280,
        580
      ],
      "id": "cdab4954-7c16-435b-915f-7c57fe6fae58",
      "name": "Telegram Trigger",
      "webhookId": "ba35f831-bd86-4bfa-b560-db44fe284608",
      "credentials": {
        "telegramApi": {
          "id": "DLdpyoZZpMCSFwwo",
          "name": "Ubuntu"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32ff32a4-a842-42e5-9136-108be8aa81ec",
              "leftValue": "={{ $('video prompter').item.json.output.movie_make }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        200
      ],
      "id": "fc7f9425-888e-4139-92f0-13bf6bd6805d",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "sendVideo",
        "chatId": "7803600894",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1100,
        380
      ],
      "id": "5d0a7ad4-026d-4a48-81b7-aaadcb5a93f8",
      "name": "send video",
      "webhookId": "b1acc5f1-a924-42ce-9e4a-61cecd835225",
      "credentials": {
        "telegramApi": {
          "id": "J6o0lFMcDRX5Q7Fm",
          "name": "Telegram_ubuntu"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/kwaivgi/kling-v1.6-standard/predictions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"input\": {\n      \"prompt\": \"{{ $('video prompter').item.json.output.movie_prompt }}\",\n      \"start_image\": \"{{ $json.output[0] }}\",\n      \"duration\": 5,\n      \"cfg_scale\": 0.5,\n      \"aspect_ratio\": \"{{ $('video prompter').item.json.output.ratio }}\",\n      \"negative_prompt\": \"\"\n    }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        400
      ],
      "id": "b93b2394-49af-4218-8f18-dd348761d229",
      "name": "video gen",
      "credentials": {
        "httpBearerAuth": {
          "id": "uLshS3doocWRipg3",
          "name": "Replicate"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.output[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        760,
        200
      ],
      "id": "6f0bfd46-6ad4-45f4-ad1a-65926e051513",
      "name": "image download"
    },
    {
      "parameters": {
        "url": "={{ $json.output }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        960,
        380
      ],
      "id": "d176242a-010c-4fae-aec3-02a11b6d9f5d",
      "name": "video download",
      "credentials": {
        "httpBearerAuth": {
          "id": "uLshS3doocWRipg3",
          "name": "Replicate"
        }
      }
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        460,
        400
      ],
      "id": "7a7525dc-e426-405a-aa87-9b31002d5adc",
      "name": "Wait",
      "webhookId": "89dab12c-0519-4134-bb37-1d319168a0a3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "succeeded",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "580f1c73-733d-49d9-bb04-9eee8969d91c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "succeeded"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "805f968b-f7ab-4bfd-b72c-5ba0308ed1cf",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a84f7dfc-dd93-47ab-87f5-52fbc2d393d9",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "failed",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        700,
        400
      ],
      "id": "7acbf48c-a23e-4439-bc95-40f652803b07",
      "name": "Switch"
    },
    {
      "parameters": {
        "url": "=https://api.replicate.com/v1/predictions/{{ $('video gen').item.json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        580,
        400
      ],
      "id": "3db8c06b-7271-4661-9c2b-6cc5b5df4eeb",
      "name": "HTTP Request",
      "credentials": {
        "httpBearerAuth": {
          "id": "uLshS3doocWRipg3",
          "name": "Replicate"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-05-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        280,
        780
      ],
      "id": "44ca6d6c-2753-4c9e-b90c-cdf67a610834",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "MMpgh88Wf0gowmRS",
          "name": "Gemini"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# Role\n당신은 창의적인 이미지 프롬프트 디자이너입니다.\n\n# Task\n- 사용자가 제시한 아이디어를 바탕으로, \n- AI 이미지 생성 모델이 이해하기 쉽도록 상세하고 구체적인 프롬프트를 작성하세요.\n\n# Rule\n- 프롬프트는 영어로 작성합니다.\n- 부정적 요소(예: 'no watermark', 'no text', 'no logo')가 필요하면 마지막에 'Negative prompt:'로 명시하세요.\n- 민감하거나 불법적인 내용, 선정적·폭력적 표현은 포함하지 마세요.\n- 결과물은 한 문단(최대 100단어)으로 작성하세요.\n- 프롬프트에는 스타일(예: 'digital painting', 'photorealistic'), 분위기, 색상, 구도, 세부 묘사 등을 포함하세요.\n- 사용자의 입력이 모호하거나 불충분할 경우, 가장 일반적이고 긍정적인 해석을 적용하세요.\n- 항상 명확하고 전문적인 프롬프트만을 출력하세요.\n\n## Image Ratio\n- 이미지 ratio는 16:9, 21:9, 3:2, 2:3, 4:5, 5:4, 3:3, 4:3, 9:21 중 하나여야 합니다. \n- 이미지 ratio에 대한 언급이 없으면 16:9로 설정합니다.\n\n## Index of LoRa\n- huggingface.co/UmeAiRT/FLUX.1-dev-LoRA-Modern_Pixel_art|umempart|게임스타일\n- huggingface.co/openfree/flux-chatgpt-ghibli-lora|ghibli|지브리스타일\n- huggingface.co/strangerzonehf/Flux-Midjourney-Mix2-LoRA|MJ v6|미드저니 스타일(default)\n- huggingface.co/dvyio/flux-lora-simple-illustration|illustration in the style of SMPL|스케치스타일\n\n## Video Generation\n- 영상제작을 요청한 경우, movie_make 값은 true로 설정합니다.\n- 영상 제작요청 시 해당 영상이 어떻게 움직일지를 상상하여 movie_prompt를 영문으로 작성합니다.\n- movie_prompt 작성시 움직임을 중점적으로 설명합니다.\n- AI 영상 제작의 한계로 복잡한 움직임보다는 단순한 움직임을 사용하는 게 좋습니다.\n\n# 출력 예시\n{\n  \"prompt\": \"A serene mountain landscape at sunrise, digital painting, soft pastel colors, misty atmosphere, detailed textures, wide panoramic view. Negative prompt: no people, no text, no watermark.\",\n  \"ratio\": \"16:9\",\n  \"result\": \"true\",\n  \"lora_weights\": \"huggingface.co/strangerzonehf/Flux-Midjourney-Mix2-LoRA\",\n  \"trigger_words\": \"MJ v6\",\n  \"movie_make\": \"true\",\n  \"movie_prompt\": \"A cinematic sunrise slowly illuminating a peaceful mountain landscape, soft pastel colors blending in the mist, camera panning across detailed textures, revealing a wide panoramic view. The scene transitions smoothly as morning light spreads, enhancing the serene and tranquil atmosphere. No people, no text, no watermark.\"\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        240,
        200
      ],
      "id": "630cc18e-4de6-4445-8425-cf4348b12552",
      "name": "video prompter"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=[Role]\n당신은 창의적인 이미지 프롬프트 디자이너입니다.\n\n[Task]\n- 사용자가 제시한 아이디어를 바탕으로, \n- AI 이미지 생성 모델이 이해하기 쉽도록 상세하고 구체적인 프롬프트를 작성하세요.\n\n[Rule]\n- 프롬프트는 영어로 작성합니다.\n- 부정적 요소(예: 'no watermark', 'no text', 'no logo')가 필요하면 마지막에 'Negative prompt:'로 명시하세요.\n- 민감하거나 불법적인 내용, 선정적·폭력적 표현은 포함하지 마세요.\n- 결과물은 한 문단(최대 100단어)으로 작성하세요.\n- 프롬프트에는 스타일(예: 'digital painting', 'photorealistic'), 분위기, 색상, 구도, 세부 묘사 등을 포함하세요.\n- 사용자의 입력이 모호하거나 불충분할 경우, 가장 일반적이고 긍정적인 해석을 적용하세요.\n- 항상 명확하고 전문적인 프롬프트만을 출력하세요.\n\n## Image Ratio\n- 이미지 ratio는 16:9, 21:9, 3:2, 2:3, 4:5, 5:4, 3:3, 4:3, 9:21 중 하나여야 합니다. \n- 이미지 ratio에 대한 언급이 없으면 16:9로 설정합니다.\n\n## Index of LoRa\n- huggingface.co/UmeAiRT/FLUX.1-dev-LoRA-Modern_Pixel_art|umempart|픽셀, 게임 스타일\n- huggingface.co/strangerzonehf/Flux-Midjourney-Mix2-LoRA|MJ v6|미드저니 스타일(default)\n- huggingface.co/dvyio/flux-lora-simple-illustration|illustration in the style of SMPL|스케치 스타일\n- huggingface.co/openfree/flux-chatgpt-ghibli-lora|ghibli|지브리스타일\n\n[출력 예시]\n{\n  \"prompt\":\"A serene mountain landscape at sunrise, digital painting, soft pastel colors, misty atmosphere, detailed textures, wide panoramic view. Negative prompt: no people, no text, nowatermark.\",\n  \"ratio\":\"16:9\",\n  \"result\":\"true\",\n  \"lora_weights\":\"huggingface.co/strangerzonehf/Flux-Midjourney-Mix2-LoRA\",\n  \"trigger_words\":\"MJ v6\"\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        320,
        640
      ],
      "id": "a70cc03e-298a-4e36-99d7-3285d8892301",
      "name": "image prompter"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "=## ROLE  \nYou are a friendly, attentive, and helpful AI assistant specialized in document analysis and question answering. Your primary goal is to assist the user while maintaining a personalized and engaging interaction. Always respond in the same language as the question was asked, kindly answer in Korean when Korean is used.\n\n---\n\n## RULES  \n\n### Core Interaction Principles  \n\n1. **Context Awareness**  \n   - Leverage memories for personalized responses.  \n   - Verify memory timestamps for relevance.  \n   - current time is {{ $now }}  \n\n2. **MCP Tool Operation**  \n   **Tool Invocation Protocol**  \n   - Map requests to exact tool names:  \n     - Calendar: `Create Event`, `Get Event`  \n     - Documents: `QA_chain`  \n     - Web Search: `Search Tool`  \n\n3. **Web Search and Document Analysis**  \n   - Carefully analyze the given context to extract relevant information.  \n   - Always use web search to find exact information; vector store is not available.  \n   - If the question’s language differs from the context, first understand the intent of the question.  \n   - Search for relevant information within the context, even if it is in a different language.  \n   - Provide a comprehensive answer based on the information found.  \n   - Translate accurately when necessary, preserving original meaning.  \n   - For complex or technical topics, provide both original terms and their translations for clarity.  \n   - Cite sources clearly after each piece of information, including direct clickable URLs for internet-based references, using this format:  \n     `[Attach: Document Title, Page X, URL]` or `[Document Title, Page X, URL]`  \n   - Include a “References” section summarizing all cited sources with:  \n     - Author(s)  \n     - Document title  \n     - Publication year if available  \n     - Page numbers referenced  \n     - URL if applicable  \n   - If no relevant information is found, clearly acknowledge this limitation.  \n   - Never fabricate information not present in the context.  \n\n4. **Error Prevention**  \n   - Initiate clarification for:  \n     - Missing required parameters.  \n     - Ambiguous time references.  \n     - Unclear document search terms.  \n\n---\n\n**Recall Protocol**  \n- Use stored preferences for:  \n  - Calendar event titles.  \n  - Document search patterns.  "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        320,
        960
      ],
      "id": "0cd1b242-8295-4995-93d2-d336b565945c",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sseEndpoint": "https://n7n.aidoingai.com/mcp/674f9511-fe37-4554-86f4-67ff6a592690/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        540,
        1140
      ],
      "id": "c0578b4a-b1d3-4260-8026-2e22778bce71",
      "name": "MCP Client"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        400,
        1140
      ],
      "id": "74396026-3976-4fd7-9766-2bb73771faed",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        260,
        1140
      ],
      "id": "45e8ce48-70bd-40e7-b16c-a796c063f711",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "XsISmIe5jtIv9n2W",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "7803600894",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        660,
        960
      ],
      "id": "41ab763e-5a98-4a2f-88aa-9c6d25528a0d",
      "name": "Telegram1",
      "webhookId": "12905951-8c54-48d7-a111-81973b859c57",
      "credentials": {
        "telegramApi": {
          "id": "J6o0lFMcDRX5Q7Fm",
          "name": "Telegram_ubuntu"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"prompt\":\"이미지 프롬프트\",\n  \"ratio\":\"이미지 ratio\",\n  \"result\":\"true or false\",\n  \"lora_weight\":\"Lora Address\",\n  \"trigger_words\":\"trigger_words\",\n  \"movie_make\":\"true or false\",\n  \"movie_prompt\":\"영상용 프롬프트\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        420,
        80
      ],
      "id": "6adfa2d9-cb3e-4390-9e7c-87d136802dd1",
      "name": "Video Output Parser"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"prompt\":\"이미지 프롬프트\",\n  \"ratio\":\"이미지 ratio\",\n  \"result\":\"true or false\",\n  \"lora_weight\":\"Lora Address\",\n  \"trigger_words\":\"trigger_words\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        540,
        800
      ],
      "id": "eba51fee-ffa6-457d-8a32-2383fdf85c57",
      "name": "Image Output Parser"
    },
    {
      "parameters": {
        "url": "={{ $json.output[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        840,
        640
      ],
      "id": "cb336a1b-3a9d-4329-aaef-85c48d6b86ac",
      "name": "Image Downloader"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-schnell-lora/predictions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"input\": {\n      \"prompt\": \"in the style of {{ $json.output.trigger_words }}, {{ $json.output.prompt }}\",\n      \"go_fast\": true,\n      \"lora_scale\": 0.8,\n      \"megapixels\": \"1\",\n      \"num_outputs\": 1,\n      \"aspect_ratio\": \"{{ $json.output.ratio }}\",\n      \"lora_weights\": \"{{ $json.output.lora_weight }}\",\n      \"output_format\": \"png\",\n      \"output_quality\": 80,\n      \"num_inference_steps\": 4,\n      \"disable_safety_checker\": true\n    }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        580,
        200
      ],
      "id": "1454384f-880e-4940-a0cf-ecb1977163d2",
      "name": "image gen for video",
      "credentials": {
        "httpBearerAuth": {
          "id": "uLshS3doocWRipg3",
          "name": "Replicate"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "7803600894",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        980,
        640
      ],
      "id": "38273909-bb3f-452f-a06a-8b99bf820d3c",
      "name": "send image1",
      "webhookId": "12905951-8c54-48d7-a111-81973b859c57",
      "credentials": {
        "telegramApi": {
          "id": "J6o0lFMcDRX5Q7Fm",
          "name": "Telegram_ubuntu"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        240,
        80
      ],
      "id": "a014a94a-f1e7-41ed-a0d8-5393bccc7503",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "XsISmIe5jtIv9n2W",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "영상",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "fb436bc3-860b-4244-b537-9140d88da60e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "video"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "aa8e7853-4309-40cc-b680-019e8ed7cd3b",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "사진",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "others"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -140,
        580
      ],
      "id": "722c0020-cea8-4675-b810-29bdee401022",
      "name": "Input Router"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-schnell-lora/predictions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"input\": {\n      \"prompt\": \"in the style of {{ $json.output.trigger_words }}, {{ $json.output.prompt }}\",\n      \"go_fast\": true,\n      \"lora_scale\": 0.8,\n      \"megapixels\": \"1\",\n      \"num_outputs\": 1,\n      \"aspect_ratio\": \"{{ $json.output.ratio }}\",\n      \"lora_weights\": \"{{ $json.output.lora_weight }}\",\n      \"output_format\": \"png\",\n      \"output_quality\": 80,\n      \"num_inference_steps\": 4,\n      \"disable_safety_checker\": true\n    }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        700,
        640
      ],
      "id": "dc1ea1ce-7d24-4ef9-9bc1-eac576cdf9f4",
      "name": "Image gen",
      "credentials": {
        "httpBearerAuth": {
          "id": "uLshS3doocWRipg3",
          "name": "Replicate"
        }
      }
    },
    {
      "parameters": {
        "content": "## Video Generator\n",
        "height": 600,
        "width": 1380
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "aa7cfcd6-f880-4d01-870c-99963bd1f211",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Image Generator\n",
        "height": 300,
        "width": 1380
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        620
      ],
      "typeVersion": 1,
      "id": "d3afcfd4-b599-4724-aabb-ce7113725c58",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Assistant with MCP\n",
        "height": 320,
        "width": 860
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        940
      ],
      "typeVersion": 1,
      "id": "86049c7e-d9cc-4830-b55e-859da4424cae",
      "name": "Sticky Note2"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Input Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "video gen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "video gen": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "image download": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "video download": {
      "main": [
        [
          {
            "node": "send video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "video download",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "image prompter",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "video prompter": {
      "main": [
        [
          {
            "node": "image gen for video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "image prompter": {
      "main": [
        [
          {
            "node": "Image gen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Video Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "video prompter",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Image Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "image prompter",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Image Downloader": {
      "main": [
        [
          {
            "node": "send image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "image gen for video": {
      "main": [
        [
          {
            "node": "image download",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "video prompter",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Input Router": {
      "main": [
        [
          {
            "node": "video prompter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "image prompter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image gen": {
      "main": [
        [
          {
            "node": "Image Downloader",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "82fcfbc4-8535-43ec-93ad-a847894cd673",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f59c0de63285a64c131184e7bec79da05901447afbe86aac036ebf3df0ced53d"
  },
  "id": "iVtmQza6AoJJZRs4",
  "tags": [
    {
      "createdAt": "2025-06-06T04:29:31.778Z",
      "updatedAt": "2025-06-06T04:29:31.778Z",
      "id": "Q2cucN8JGHgqgLzH",
      "name": "tw"
    }
  ]
}